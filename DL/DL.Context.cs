//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ERuizBriveEntities1 : DbContext
    {
        public ERuizBriveEntities1()
            : base("name=ERuizBriveEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Producto> Productoes { get; set; }
        public virtual DbSet<ProductoSucursal> ProductoSucursals { get; set; }
        public virtual DbSet<Sucursal> Sucursals { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
        public virtual DbSet<VentaProducto> VentaProductoes { get; set; }
    
        public virtual int ProductoAdd(string nombre, Nullable<decimal> precioUnitario, Nullable<int> codigoDeBarras, byte[] imagen)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioUnitarioParameter = precioUnitario.HasValue ?
                new ObjectParameter("PrecioUnitario", precioUnitario) :
                new ObjectParameter("PrecioUnitario", typeof(decimal));
    
            var codigoDeBarrasParameter = codigoDeBarras.HasValue ?
                new ObjectParameter("CodigoDeBarras", codigoDeBarras) :
                new ObjectParameter("CodigoDeBarras", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoAdd", nombreParameter, precioUnitarioParameter, codigoDeBarrasParameter, imagenParameter);
        }
    
        public virtual int ProductoDelete(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoDelete", idProductoParameter);
        }
    
        public virtual ObjectResult<ProductoGetAll_Result> ProductoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetAll_Result>("ProductoGetAll");
        }
    
        public virtual ObjectResult<ProductoGetById_Result> ProductoGetById(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetById_Result>("ProductoGetById", idProductoParameter);
        }
    
        public virtual int ProductoUpdate(Nullable<int> idProducto, string nombre, Nullable<int> codigoDeBarras, Nullable<decimal> precioUnitario, byte[] imagen)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoDeBarrasParameter = codigoDeBarras.HasValue ?
                new ObjectParameter("CodigoDeBarras", codigoDeBarras) :
                new ObjectParameter("CodigoDeBarras", typeof(int));
    
            var precioUnitarioParameter = precioUnitario.HasValue ?
                new ObjectParameter("PrecioUnitario", precioUnitario) :
                new ObjectParameter("PrecioUnitario", typeof(decimal));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoUpdate", idProductoParameter, nombreParameter, codigoDeBarrasParameter, precioUnitarioParameter, imagenParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetIds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetIds");
        }
    
        public virtual ObjectResult<SucursalGetAll_Result> SucursalGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SucursalGetAll_Result>("SucursalGetAll");
        }
    
        public virtual ObjectResult<ProductoSucursalGetAll_Result> ProductoSucursalGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoSucursalGetAll_Result>("ProductoSucursalGetAll");
        }
    
        public virtual int ProductoSucursalUpdateStock(Nullable<int> idProductoSucursal, Nullable<int> stock)
        {
            var idProductoSucursalParameter = idProductoSucursal.HasValue ?
                new ObjectParameter("IdProductoSucursal", idProductoSucursal) :
                new ObjectParameter("IdProductoSucursal", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoSucursalUpdateStock", idProductoSucursalParameter, stockParameter);
        }
    
        public virtual int ProductoSucursalDelete(Nullable<int> idProductoSucursal)
        {
            var idProductoSucursalParameter = idProductoSucursal.HasValue ?
                new ObjectParameter("IdProductoSucursal", idProductoSucursal) :
                new ObjectParameter("IdProductoSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoSucursalDelete", idProductoSucursalParameter);
        }
    
        public virtual ObjectResult<ProductoSucursalGetByIdSucursal_Result> ProductoSucursalGetByIdSucursal(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoSucursalGetByIdSucursal_Result>("ProductoSucursalGetByIdSucursal", idSucursalParameter);
        }
    
        public virtual ObjectResult<ProductoSucursalGetById_Result> ProductoSucursalGetById(Nullable<int> idProductoSucursal)
        {
            var idProductoSucursalParameter = idProductoSucursal.HasValue ?
                new ObjectParameter("IdProductoSucursal", idProductoSucursal) :
                new ObjectParameter("IdProductoSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoSucursalGetById_Result>("ProductoSucursalGetById", idProductoSucursalParameter);
        }
    
        public virtual int ProductoSucursalAdd(Nullable<int> idProducto, Nullable<int> idSucursal, Nullable<int> stock)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoSucursalAdd", idProductoParameter, idSucursalParameter, stockParameter);
        }
    
        public virtual int VentaAdd(ObjectParameter idVenta, Nullable<decimal> total)
        {
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VentaAdd", idVenta, totalParameter);
        }
    
        public virtual int VentaProductoAdd(Nullable<int> idVenta, Nullable<int> cantidad, Nullable<int> idProductoSucursal)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("IdVenta", idVenta) :
                new ObjectParameter("IdVenta", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var idProductoSucursalParameter = idProductoSucursal.HasValue ?
                new ObjectParameter("IdProductoSucursal", idProductoSucursal) :
                new ObjectParameter("IdProductoSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VentaProductoAdd", idVentaParameter, cantidadParameter, idProductoSucursalParameter);
        }
    
        public virtual ObjectResult<ProductoGetByCodigoDeBarras_Result> ProductoGetByCodigoDeBarras(Nullable<int> codigoDeBarras)
        {
            var codigoDeBarrasParameter = codigoDeBarras.HasValue ?
                new ObjectParameter("CodigoDeBarras", codigoDeBarras) :
                new ObjectParameter("CodigoDeBarras", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetByCodigoDeBarras_Result>("ProductoGetByCodigoDeBarras", codigoDeBarrasParameter);
        }
    
        public virtual ObjectResult<VentaGetAll_Result> VentaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentaGetAll_Result>("VentaGetAll");
        }
    
        public virtual ObjectResult<GetByIdVenta_Result> GetByIdVenta(Nullable<int> idVenta)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("IdVenta", idVenta) :
                new ObjectParameter("IdVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdVenta_Result>("GetByIdVenta", idVentaParameter);
        }
    
        public virtual ObjectResult<VentaProductoGetByIdSucursal_Result> VentaProductoGetByIdSucursal(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentaProductoGetByIdSucursal_Result>("VentaProductoGetByIdSucursal", idSucursalParameter);
        }
    }
}
